syntax = "proto3";

package datafridge.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "VendorScheduleStreamProto";
option java_package = "com.deliveryhero.logistics.customer.datafridge.v1beta1";

import "domain/v1beta1/time.proto";
import "validate/validate.proto";

// Vendor Schedule Event Stream schema.
// https://docs.api.thedatafridge.com/#operation/VendorSchedule
message VendorSchedule {
  // Required fields
  string global_entity_id = 1 [(validate.rules).string.pattern = "^[A-Z]{2,3}_[A-Z]{2}$"];
  .domain.v1beta1.UnixTimeMillis timestamp = 2 [(validate.rules).message.required = true];
  string vendor_id = 3 [(validate.rules).string.min_len = 1];
  // Using IANA-hosted time zone: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  // Examples: Europe/Berlin, Asia/Istanbul
  string timezone = 4 [(validate.rules).string.min_len = 1];
  Schedule schedule = 5 [(validate.rules).message.required = true];
  // Optional fields
  repeated SpecialDay special_days = 6;
}

// Schedule of vendor.
message Schedule {
  Day monday = 1;
  Day tuesday = 2;
  Day wednesday = 3;
  Day thursday = 4;
  Day friday = 5;
  Day saturday = 6;
  Day sunday = 7;
}

// Specific day information of vendor.
message Day {
  repeated TimeRange time_ranges = 1;
}

// Special day of vendor.
message SpecialDay {
  string date = 1 [(validate.rules).string.pattern = "\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"];
  repeated TimeRange time_ranges = 2;
}

// Time range for schedule and special_days.
message TimeRange {
  // "from" format is HH:mm, 00:00 <= from <= 23:59.
  string from = 1 [(validate.rules).string.pattern = "^([01][0-9]|2[0-3]):[0-5][0-9]$"];
  // "to" format is HH:mm, 00:01 <= to <= 24:00.
  string to = 2 [(validate.rules).string.pattern = "^00:(0[1-9]|[1-5][0-9])|(0[1-9]|1[0-9]|2[0-3]):[0-5][0-9]|24:00$"];
}
